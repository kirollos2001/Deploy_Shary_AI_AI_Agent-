name: Build & Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGION: us-central1
  PROJECT_ID: shary-ai-agent
  SERVICE_NAME: ai-shary
  ARTIFACT_REPO: docker
  REPO: ai-shary
  PORT: 5000

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Docker login to Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          TOKEN="$(gcloud auth print-access-token)"
          echo "$TOKEN" | docker login -u oauth2accesstoken --password-stdin "${{ env.REGION }}-docker.pkg.dev"

      - name: Build image (verbose)
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.REPO }}:${{ github.sha }}
        run: |
          echo "IMAGE=$IMAGE"
          docker build --progress=plain -t "$IMAGE" .

      - name: Push image (retry once)
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.REPO }}:${{ github.sha }}
        run: |
          set -e
          if ! docker push "$IMAGE"; then
            echo "First push failed, re-login then retry..."
            gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
            TOKEN="$(gcloud auth print-access-token)"
            echo "$TOKEN" | docker login -u oauth2accesstoken --password-stdin "${{ env.REGION }}-docker.pkg.dev"
            docker push "$IMAGE"
          fi

      # Resolve runtime service account (uses default compute SA if none provided)
      - name: Resolve runtime service account
        run: |
          if [ -n "${{ secrets.RUNTIME_SA_EMAIL }}" ]; then
            echo "RUNTIME_SA=${{ secrets.RUNTIME_SA_EMAIL }}" >> $GITHUB_ENV
          else
            PN="$(gcloud projects describe '${{ env.PROJECT_ID }}' --format='value(projectNumber)')"
            echo "RUNTIME_SA=${PN}-compute@developer.gserviceaccount.com" >> $GITHUB_ENV
          fi

      - name: Deploy to Cloud Run
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.REPO }}:${{ github.sha }}
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "$IMAGE" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --service-account "${RUNTIME_SA}" \
            --port ${{ env.PORT }} \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 4 \
            --concurrency 80 \
            --set-env-vars GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}

      - name: Post-deploy URL
        run: |
          gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format='value(status.url)'
