name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGION: us-central1
  SERVICE_NAME: ai-shary
  REPO: ai-shary
  ARTIFACT_REPO: docker

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Debug آمن للتأكد من وجود السيكرتس (لا يطبع قيم)
      - name: Debug secrets presence (safe)
        run: |
          echo "Has GCP_SERVICE_ACCOUNT_KEY? $([ -n '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' ] && echo YES || echo NO)"
          echo "Has GCP_PROJECT_ID? $([ -n '${{ secrets.GCP_PROJECT_ID }}' ] && echo YES || echo NO)"

      # جمع الإعدادات للـ env: استخدم GCP_PROJECT_ID أو استخرجه من JSON
      - name: Collect config to env
        run: |
          if [ -n "${{ secrets.GCP_PROJECT_ID }}" ]; then
            echo "PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          else
            echo "PROJECT_ID=${{ fromJSON(secrets.GCP_SERVICE_ACCOUNT_KEY).project_id }}" >> $GITHUB_ENV
          fi

          if [ -n "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" ]; then
            echo "GCP_AUTH_MODE=key" >> $GITHUB_ENV
          else
            echo "GCP_AUTH_MODE=none" >> $GITHUB_ENV
          fi

      - name: Fail if no auth configured
        if: env.GCP_AUTH_MODE == 'none'
        run: |
          echo "No GCP auth configured. Add GCP_SERVICE_ACCOUNT_KEY (JSON) and optionally GCP_PROJECT_ID." >&2
          exit 1

      - name: Auth via Service Account Key
        if: env.GCP_AUTH_MODE == 'key'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Artifact Registry Docker auth
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      - name: Build and push image
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.REPO }}:${{ github.sha }}
        run: |
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.REPO }}:${{ github.sha }}
        run: |
          gcloud run deploy ${SERVICE_NAME} \
            --image "$IMAGE" \
            --region ${REGION} \
            --platform managed \
            --allow-unauthenticated \
            --port 5000 \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 4 \
            --concurrency 80 \
            --set-env-vars PORT=5000,GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}

      - name: Post-deploy URL
        run: |
          gcloud run services describe ${SERVICE_NAME} --region ${REGION} --format 'value(status.url)'
