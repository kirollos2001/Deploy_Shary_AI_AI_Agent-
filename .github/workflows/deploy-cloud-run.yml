name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGION: us-central1
  SERVICE_NAME: ai-shary
  REPO: ai-shary
  ARTIFACT_REPO: docker

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # حدد وضع الأوثنتيكيشن من خلال السيكرتس ثم خزّنه في متغيرات بيئية
      - name: Decide auth mode
        id: decide-auth
        run: |
          has_wif=false
          has_key=false

          if [ -n "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}" ] && [ -n "${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}" ]; then
            has_wif=true
          fi
          if [ -n "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" ]; then
            has_key=true
          fi

          if [ "$has_wif" = "true" ]; then
            echo "GCP_AUTH_MODE=wif" >> $GITHUB_ENV
          elif [ "$has_key" = "true" ]; then
            echo "GCP_AUTH_MODE=key" >> $GITHUB_ENV
          else
            echo "GCP_AUTH_MODE=none" >> $GITHUB_ENV
          fi

          # مرر الـ PROJECT_ID (لو موجود كسكرت) كمتغير بيئي
          if [ -n "${{ secrets.GCP_PROJECT_ID }}" ]; then
            echo "PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          fi

      - name: Fail if no auth configured
        if: env.GCP_AUTH_MODE == 'none'
        run: |
          echo "No GCP auth configured. Set WIF secrets or GCP_SERVICE_ACCOUNT_KEY." >&2
          exit 1

      - name: Auth via Workload Identity Federation
        if: env.GCP_AUTH_MODE == 'wif'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Auth via Service Account Key
        if: env.GCP_AUTH_MODE == 'key'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Artifact Registry Docker auth
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      - name: Build and push image
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.REPO }}:${{ github.sha }}
        run: |
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.REPO }}:${{ github.sha }}
        run: |
          gcloud run deploy ${SERVICE_NAME} \
            --image "$IMAGE" \
            --region ${REGION} \
            --platform managed \
            --allow-unauthenticated \
            --port 5000 \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 4 \
            --concurrency 80 \
            --set-env-vars PORT=5000,GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}

      - name: Post-deploy URL
        run: |
          gcloud run services describe ${SERVICE_NAME} --region ${REGION} --format 'value(status.url)'
